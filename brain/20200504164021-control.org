#+TITLE: Control
- tags :: [[file:20200429185809-linear_algebra.org][Linear Algebra]], [[file:20200708153036-dynamic_systems.org][Dynamic Systems]]

* Definition
#+begin_quote
Control is the art of taking what you have and transforming it in what you want.
#+end_quote

The are at least 3 basic elements to control something:
1. What you want to control, called plant
2. What you want, called reference
3. What you have, output


For a given plant, every input you give will have a corresponding output. The control problem is to choose an input for the plant such the output is equal to the reference.

#+begin_example
A simple example is going back home: In this case you are the plant yourself!! The output is your current location and the input is to walk. The reference is your house's location. The simplest control is to walk in your house's direction.
#+end_example


* Inverted Pendulum

#+ATTR_HTML: :alt cat/spider image :title Action! :width 150
| *No control*                                                                                                                                                | *Swing-Up without Stabilization*                                                                                                                                               | *Swing-Up with Stabilization*                                                                                                                                               |
| @@html:<a href="https://asciinema.org/a/375762"><img style="max-width:200px" src="https://github.com/Accacio/Accacio/raw/master/img/no_control.svg" alt="Pendulum with no control"></a>@@ | @@html:<a href="https://asciinema.org/a/375763"><img style="max-width:200px" src="https://github.com/Accacio/Accacio/raw/master/img/no_control_swingup.svg" alt="Pendulum with swing-up but no stabilization"></a>@@ | @@html:<a href="https://asciinema.org/a/375764"><img style="max-width:200px" src="https://github.com/Accacio/Accacio/raw/master/img/controlled.svg" alt="Pendulum with swing-up and stabilization"></a>@@ |

* Control Loop
#+begin_src ditaa :file img/controlLoop.png :results file :eval no-export :exports results

              +----------+   +-----+  +-------+
 r   +---+ e  |          |u  |     |  |       |   y
 --->++  +--->|Controller+-->+Plant+->+Measure+-+--->
     | - |    |    cRED  |   | cBLU|  | cYEL  | |
     +-+-+    +----------+   +-----+  +-------+ |
       ^                                        |
       |                                        |
       +----------------------------------------+
                     m
#+end_src

#+RESULTS:
[[file:img/controlLoop.png]]

* Meme
[[https://www.youtube.com/watch?v=c-FT0T9Ei-4][Missile guidance explained]]
#+begin_quote
The missile knows where it is at all times. It knows this because it knows where it isn't. By subtracting where it is from where it isn't, or where it isn't from where it is (whichever is greater), it obtains a difference, or a deviation. The guidance subsystem uses deviations to generate corrective commands to drive the missile from a position where it is to a position where it isn't, and arriving at a position where it wasn't, it now is. Consequently, the position where it is, is now the position that it wasn't, and it follows that the position that it was, is now the position that it isn't.

In the event that the position that it is in is not the position that it wasn't, the system has acquired a variation, the variation being the difference between where the missile is, and where it wasn't. If variation is considered to be a significant factor, it too may be corrected by the GEA. However, the missile must also know where it was.

The missile guidance computer scenario works as follows. Because a variation has modified some of the information the missile has obtained, it is not sure just where it is. However, it is sure where it isn't, within reason, and it knows where it was. It now subtracts where it should be from where it wasn't, or vice-versa, and by differentiating this from the algebraic sum of where it shouldn't be, and where it was, it is able to obtain the deviation and its variation, which is called error.
#+end_quote

* Definitions
** Monic Transfer function
First term is 1 \to $H_o(z)=1+\sum_{k=1}^\infty h_0(k)z^{-k}$
