:PROPERTIES:
:ID:       e9766a59-fd79-4be1-8a46-387c852c22f0
:END:
#+title: Graph Theory
#+OPTIONS: todo:nil num:nil timestamp:nil author:nil

Based on cite:GodsilRoyle2001.

* Definitions

-  <<<Vertex>>> or <<<node>>> ::
  A vertex is the fundamental unit of _graph theory_
#+begin_src dot :file img/vertex.svg :exports results :cache yes
graph {
rankdir="LR";
a;
}
#+end_src

#+RESULTS[0a2670363f1671ef022902f2a2b3f6531a72dcdc]:
[[file:img/vertex.svg]]

-  <<<Edge>>> ::
  An edge is an unordered pair of vertices of vertex set $V(\mathcal{X})$

#+begin_src dot :file img/edge.svg :exports results :cache yes
graph {
rankdir="LR";
a -- b [label="e"];
}
#+end_src

#+RESULTS[df4e7453383fd38abf919a36243e1acabffef28f]:
[[file:img/edge.svg]]

-  <<<Arc>>> ::
  An arc is an ordered pair of vertices of vertex set $V(\mathcal{X})$
#+begin_src dot :file img/arc.svg :exports results :cache yes
digraph {
rankdir="LR";
a -> b;
}
#+end_src

#+RESULTS[b6ecee338b93d2066ec1b143821fc24724f44bab]:
[[file:img/arc.svg]]


- Undirected <<<graph>>> ::
  A graph $\mathcal{X}$ consists of a vertex set $V(\mathcal{X})$ and an edge set $E(\mathcal{X})$.

#+begin_src dot :file img/graph.svg :exports results :cache yes
graph {
rankdir="LR";
a -- b;
b -- c;
c -- d;
d -- b;
c -- a;
}
#+end_src

#+RESULTS[7ba9e628af4b55c5d8f54d5a7dbc816a4308a3dd]:
[[file:img/graph.svg]]

- <<<Directed graph>>> ::
  A graph $\mathcal{X}$ consists of a vertex set $V(\mathcal{X})$ and an arc set $A(\mathcal{X})$.
#+begin_src dot :file img/digraph.svg :exports results
digraph {
rankdir="LR";
a -> c;
b -> c;
c -> d;
d -> b;
c -> a;
}
#+end_src

#+RESULTS:
[[file:img/digraph.svg]]


- <<<Induced subgraph>>> ::
  A Graph created from vertices and edge​s from the original graph
  #+name: originalGraph
  #+caption: Original graph
  [[file:img/graph.png]]
  #+begin_src dot :file img/inducedSubgraph.svg :exports results
  graph {
  rankdir="LR";
  c -- a;
  c -- d;
  d -- b;
  }
  #+end_src

  #+caption: a subgraph of [[originalGraph]]
  #+RESULTS:
  [[file:img/inducedSubgraph.svg]]


- <<<Path>>> ::
  A path is a sequence of distinct edge​s connecting 2 vertices.
  The length of a path is the number of such edge​s


- <<<Neighbor>>> vertex ::
  Adjacent vertex (connected by an edge)


- <<<Complete Graph>>> ::
  A graph which every pair of vertices is adjacent $K_v$


- <<<Clique>>> ::
  Subset of vertices of undirected graph which <<Induced subgraph>> is complete


- <<<Distance>>> between vertices ::
  The distance $d_\mathcal{X}(x,y)$ is the length of the shortest path from $x$ to $y$.


- <<<Complement>>> of a graph ::
  A complement $\bar{\mathcal{X}}$ of a graph $\mathcal{X}$ has the same vertex set as $\mathcal{X}$ but its edge set is equal to $E(K_{|V(\mathcal{X})|})\setminus E(\mathcal{X})$.


- Empty graph ::
  A graph with no edge​s


- Null graph ::
  No edge​s nor vertices


- (Dis)<<<Connected Graph>>> ::
  A graph where there is (not) a path between any two vertices of the graph

- <<<Cycle>>> ::
  A (sub)graph where every vertex has only 2 neighbors

- <<<Chromatic>>> number $\chi(\mathcal{X})$ ::
  Is the number of colors needed to color the graph such adjacent vertices are colored with different colors.

- <<<Turán graph>>> ::
    A Turán graph $T(n,r)$ is a graph with $n$ vertices created by the algorithm:
     1. Partition vertices into $r$ disjoint sets $C_1,\dots,C_r$ such $|C_i|-|C_j|\leq1$ $\forall i,j \in\{1,\dots,r\}$
     2. Create edge​s between nodes not withing the same set

- <<<Chord>>> ::
    An edge that does not belong to a cycle but connects two of its vertices.

- <<<Chordal>>> graph ::
  A graph in which each cycle of four or more vertex has a chord

- Tree decomposition ::
    mapping of a graph into a tree where each vertex is a clique of the original graph.

- Erdos-Renyi Random Graph :: Method to form random graph
  https://en.wikipedia.org/wiki/Erd%C5%91s%E2%80%93R%C3%A9nyi_model

* Bibliography :ignore:
bibliographystyle:plain
bibliography:~/docsThese/bibliography.bib
